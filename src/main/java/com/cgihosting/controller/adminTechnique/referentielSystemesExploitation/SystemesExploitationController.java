package com.cgihosting.controller.adminTechnique.referentielSystemesExploitation;

import com.cgihosting.constantes.ConstantesAdmin;
import com.cgihosting.constantes.ConstantesPage;
import com.cgihosting.domain.application.JournalDTO;
import com.cgihosting.domain.application.UtilisateurDTO;
import com.cgihosting.domain.referentiel.ReferentielOSDTO;
import com.cgihosting.formulaire.adminTechnique.refrentielSystemesExploitation.AfficherOSFormulaire;
import com.cgihosting.formulaire.adminTechnique.refrentielSystemesExploitation.DetailsOSFormulaire;
import com.cgihosting.objets.PaginationObjet;
import com.cgihosting.objets.UtilisateurSession;
import com.cgihosting.outils.Dates;
import com.cgihosting.service.admin.GererHebergeurService;
import com.cgihosting.service.admin.GererOSService;
import com.cgihosting.service.admin.GererUtilisateurService;
import com.cgihosting.service.admin.JournaliserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;

/**
 * Created by marinib on 12/01/2017.
 */
@Controller
public class SystemesExploitationController {


    /**
     * Méthodes controller
     * Le tag @controller permet à spring boot d'interpréter les
     * méthodes comme des controleurs
     */



    @Autowired
    private GererOSService gererOSService;

    @Autowired
    private JournaliserService journaliserService;


    @Autowired
    private GererHebergeurService gererHebergeurService;

    @Autowired
    private GererUtilisateurService gererUtilisateurService;


    @RequestMapping(ConstantesPage.AFFICHAGE_LISTE_OS_ACTION_ENTREE)
    String afficherOS(@RequestParam(value = "page", required = false, defaultValue = "0") int page,
                              @RequestParam(value = "ligneParPage", required = false, defaultValue = "5") int ligneParPage,Model model){

        model.addAttribute(ConstantesPage.NOM_FORMULAIRE_HTML, recupererFormulaireAfficherOS(page, ligneParPage));
        return ConstantesPage.AFFICHAGE_LISTE_OS_PAGE_HTML;
    }

    @RequestMapping(value = ConstantesPage.DETAILS_OS_ACTION_ENTREE, method = RequestMethod.POST)
    String affichageDetailsOS(int identifiantOSSelect, Model model){

        model.addAttribute(ConstantesPage.NOM_FORMULAIRE_HTML, recupererFormulaireDetailsOS(identifiantOSSelect));
        return ConstantesPage.DETAILS_OS_PAGE_HTML;
    }


    @RequestMapping(value = ConstantesPage.DETAILS_OS_ACTION_MODIFIER, method = RequestMethod.POST)

    String modifierOS(@Valid @ModelAttribute(ConstantesPage.NOM_FORMULAIRE_HTML)DetailsOSFormulaire detailsOSFormulaire, BindingResult bindingResult, Model model,  @RequestParam String action){

        int identifiantDonneeTraitee = 0;
        UtilisateurDTO utilisateurDTO;
        ReferentielOSDTO referentielOSDTO;

        if (action.equals(ConstantesPage.ACTION_SAUVEGARDER)) {

            if (bindingResult.hasErrors()) {

            detailsOSFormulaire.setBoutonSoumissionLabel(ConstantesPage.DETAILS_OS_BOUTON_MODIFIER);

            detailsOSFormulaire.setTitrePage(ConstantesPage.DETAILS_OS_TITRE);
            detailsOSFormulaire.setBoutonRetourLabel(ConstantesPage.DETAILS_OS_BOUTON_RETOUR);

            model.addAttribute(ConstantesPage.NOM_FORMULAIRE_HTML, detailsOSFormulaire);

                return ConstantesPage.DETAILS_OS_PAGE_HTML;
            }
            else{


                utilisateurDTO = gererUtilisateurService.searchUserByLogonName(UtilisateurSession.getLogin());
                referentielOSDTO = detailsOSFormulaire.getReferentielOSDTO();
                referentielOSDTO.setIdCreateur(utilisateurDTO.getId());
                referentielOSDTO.setIdModificateur(utilisateurDTO.getId());
                referentielOSDTO.setDateModification(Dates.aujourdhui());
                referentielOSDTO.setDateCreation(Dates.aujourdhui());


                identifiantDonneeTraitee =  gererOSService.modifierReferentielOS(referentielOSDTO);

                JournalDTO journalDTO = new JournalDTO(UtilisateurSession.getLogin(), ConstantesAdmin.JOURNAL_AJOUT_OS,
                                                        identifiantDonneeTraitee, Dates.aujourdhui());
                journaliserService.enregistrerJournalisation(journalDTO);



                return  "redirect:" + ConstantesPage.AFFICHAGE_LISTE_OS_ACTION_ENTREE;

            }

        }

        else {

            return  "redirect:" +  ConstantesPage.AFFICHAGE_LISTE_OS_ACTION_ENTREE;

        }


    }



    /**
     * Méthodes privées appelées par les controleurs pour
     * remplir les forumalires associés aux pages web
     * méthodes comme des controleurs
     */

    private AfficherOSFormulaire recupererFormulaireAfficherOS(int pageCourante, int numLigneAfficheParPage)  {


        AfficherOSFormulaire afficherOSFormulaire = new AfficherOSFormulaire();

        PaginationObjet paginationObjet;
        paginationObjet = new PaginationObjet(numLigneAfficheParPage, pageCourante, gererOSService.nombreTotalOS());
        afficherOSFormulaire.setPaginationObjet(paginationObjet);

        afficherOSFormulaire.setReferentielOSDTOPage(gererOSService.searchAllReferentielOSDTOPageByPage(pageCourante, numLigneAfficheParPage));


        afficherOSFormulaire.setTitrePage(ConstantesPage.AFFICHAGE_LISTE_OS_TITRE);
        afficherOSFormulaire.setBoutonSoumissionLabel(ConstantesPage.AFFICHAGE_LISTE_OS_BOUTON_AJOUTER);


        afficherOSFormulaire.setUrlActionEntree(ConstantesPage.AFFICHAGE_LISTE_OS_ACTION_ENTREE);
        afficherOSFormulaire.setUrlActionSortie(ConstantesPage.DETAILS_OS_ACTION_ENTREE);


        return afficherOSFormulaire;
    }



    /**
     * Méthodes privées appelées par les controleurs pour
     * remplir les forumalires associés aux pages web
     * méthodes comme des controleurs
     */

    private DetailsOSFormulaire recupererFormulaireDetailsOS(int identifiantOSSelect) {


        /** Attributs**/
        DetailsOSFormulaire detailsOSFormulaire = new DetailsOSFormulaire();
        ReferentielOSDTO referentielOSDTO = new ReferentielOSDTO();

        if (identifiantOSSelect != 0) {
            referentielOSDTO = gererOSService.recupererReferentielOSById(identifiantOSSelect);

            detailsOSFormulaire.setBoutonSoumissionLabel(ConstantesPage.DETAILS_OS_BOUTON_MODIFIER);
        }
        else {

            detailsOSFormulaire.setBoutonSoumissionLabel(ConstantesPage.DETAILS_OS_BOUTON_AJOUTER);
        }



        detailsOSFormulaire.setTitrePage(ConstantesPage.DETAILS_OS_TITRE);
        detailsOSFormulaire.setBoutonRetourLabel(ConstantesPage.DETAILS_OS_BOUTON_RETOUR);

        detailsOSFormulaire.setUrlActionSortie(ConstantesPage.DETAILS_OS_ACTION_MODIFIER);



        detailsOSFormulaire.setReferentielOSDTO(referentielOSDTO);


        return detailsOSFormulaire;
    }


}
