package com.cgihosting.controller.exploit.referentielMails;

import com.cgihosting.constantes.ConstantesAdmin;
import com.cgihosting.constantes.ConstantesPage;
import com.cgihosting.domain.application.JournalDTO;
import com.cgihosting.domain.application.UtilisateurDTO;
import com.cgihosting.domain.referentiel.ReferentielMailsDTO;
import com.cgihosting.formulaire.exploit.referentielMails.AfficherReferentielMailsFormulaire;
import com.cgihosting.formulaire.exploit.referentielMails.DetailsReferentielMailsFormulaire;
import com.cgihosting.objets.PaginationObjet;
import com.cgihosting.objets.UtilisateurSession;
import com.cgihosting.outils.Dates;
import com.cgihosting.service.admin.GererHebergeurService;
import com.cgihosting.service.admin.GererUtilisateurService;
import com.cgihosting.service.admin.JournaliserService;
import com.cgihosting.service.exploit.GererMailsService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;

/**
 * Created by marinib on 15/01/2017.
 */
@Controller
public class MailsController {


    /**
     * Méthodes controller
     * Le tag @controller permet à spring boot d'interpréter les
     * méthodes comme des controleurs
     */



    @Autowired
    private GererMailsService gererMailsService;

    @Autowired
    private JournaliserService journaliserService;


    @Autowired
    private GererHebergeurService gererHebergeurService;

    @Autowired
    private GererUtilisateurService gererUtilisateurService;


    @RequestMapping("/exploit/afficherReferentielMails")
    String afficherMails(@RequestParam(value = "page", required = false, defaultValue = "0") int page,
                              @RequestParam(value = "ligneParPage", required = false, defaultValue = "5") int ligneParPage,Model model){

        model.addAttribute("formulaire", recupererFormulaireAfficherMails(page, ligneParPage));
        return "exploit/referentielMails/afficherReferentielMails";
    }

    @RequestMapping(value = "/exploit/afficherDetailsReferentielMails", method = RequestMethod.POST)
    String affichageDetailsMails(int identifiantMailsSelect, Model model){

        model.addAttribute(ConstantesPage.NOM_FORMULAIRE_HTML, recupererFormulaireDetailsMails(identifiantMailsSelect));
        return "exploit/referentielMails/detailsReferentielMails";
    }


    @RequestMapping(value = "/exploit/modifierReferentielMails", method = RequestMethod.POST)

    String creerMail(@Valid DetailsReferentielMailsFormulaire detailsReferentielMailsFormulaire, Model model, BindingResult bindingResult, @RequestParam String action){

        int identifiantDonneeTraitee = 0;

        UtilisateurDTO utilisateurDTO;
        ReferentielMailsDTO referentielMailsDTO;

        if (action.equals(ConstantesPage.ACTION_SAUVEGARDER)) {

            if (bindingResult.hasErrors()) {


                return "exploit/referentielMails/detailsReferentielMails";
            }
            else{

                utilisateurDTO = gererUtilisateurService.searchUserByLogonName(UtilisateurSession.getLogin());
                referentielMailsDTO = detailsReferentielMailsFormulaire.getReferentielMailsDTO();
                referentielMailsDTO.setIdModificateur(utilisateurDTO.getId());
                referentielMailsDTO.setIdCreateur(utilisateurDTO.getId());
                referentielMailsDTO.setDateCreation(Dates.aujourdhui());
                referentielMailsDTO.setDateModification(Dates.aujourdhui());

                identifiantDonneeTraitee =  gererMailsService.modifierReferentielMails(referentielMailsDTO);

                JournalDTO journalDTO = new JournalDTO(UtilisateurSession.getLogin(), ConstantesAdmin.JOURNAL_MODIFICATION_VIRTUALISATION,
                                                        identifiantDonneeTraitee, Dates.aujourdhui());
                journaliserService.enregistrerJournalisation(journalDTO);



                return  "redirect:/exploit/afficherReferentielMails";

            }

        }

        else {

            return  "redirect:/exploit/afficherReferentielMails";

        }


    }



    /**
     * Méthodes privées appelées par les controleurs pour
     * remplir les forumalires associés aux pages web
     * méthodes comme des controleurs
     */

    private AfficherReferentielMailsFormulaire recupererFormulaireAfficherMails(int pageCourante, int numLigneAfficheParPage)  {


        AfficherReferentielMailsFormulaire afficherReferentielMailsFormulaire = new AfficherReferentielMailsFormulaire();

        PaginationObjet paginationObjet;
        paginationObjet = new PaginationObjet(numLigneAfficheParPage, pageCourante, gererMailsService.nombreTotalMails());
        afficherReferentielMailsFormulaire.setPaginationObjet(paginationObjet);

        afficherReferentielMailsFormulaire.setReferentielMailsDTOPage(gererMailsService.searchAllReferentielMailsDTOPageByPage(pageCourante, numLigneAfficheParPage));


        afficherReferentielMailsFormulaire.setTitrePage(ConstantesPage.ADMIN_AFFICHAGE_VIRTUALISATION_TITRE);
        afficherReferentielMailsFormulaire.setBoutonSoumissionLabel(ConstantesPage.ADMIN_BOUTON_AJOUTER_VIRTUALISATION);



        return afficherReferentielMailsFormulaire;
    }



    /**
     * Méthodes privées appelées par les controleurs pour
     * remplir les forumalires associés aux pages web
     * méthodes comme des controleurs
     */

    private DetailsReferentielMailsFormulaire recupererFormulaireDetailsMails(int identifiantMailsSelect) {


        /** Attributs**/
        DetailsReferentielMailsFormulaire detailsReferentielMailsFormulaire = new DetailsReferentielMailsFormulaire();
        ReferentielMailsDTO referentielMailsDTO = new ReferentielMailsDTO();

        if (identifiantMailsSelect != 0) {
            referentielMailsDTO = gererMailsService.recupererReferentielMailsById(identifiantMailsSelect);

            detailsReferentielMailsFormulaire.setBoutonSoumissionLabel(ConstantesPage.ADMIN_BOUTON_MODIFIER_OS);
        }
        else {

            referentielMailsDTO.setId(0);
            detailsReferentielMailsFormulaire.setBoutonSoumissionLabel(ConstantesPage.ADMIN_BOUTON_AJOUTER_VIRTUALISATION);
        }



        detailsReferentielMailsFormulaire.setTitrePage(ConstantesPage.ADMIN_DETAIL_VIRTUALISATION_TITRE);
        detailsReferentielMailsFormulaire.setBoutonRetourLabel(ConstantesPage.ADMIN_BOUTON_RETOUR_LISTE_VIRTUALISATION);

        detailsReferentielMailsFormulaire.setReferentielMailsDTO(referentielMailsDTO);


        return detailsReferentielMailsFormulaire;
    }


}
