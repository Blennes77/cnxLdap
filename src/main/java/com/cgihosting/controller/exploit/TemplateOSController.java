package com.cgihosting.controller.exploit;

import com.cgihosting.constantes.ConstantesAdmin;
import com.cgihosting.constantes.ConstantesPage;
import com.cgihosting.domain.JournalDTO;
import com.cgihosting.domain.TemplateOSDTO;
import com.cgihosting.domain.UtilisateurDTO;
import com.cgihosting.formulaire.exploit.templateOS.AfficherTemplateOSFormulaire;
import com.cgihosting.formulaire.exploit.templateOS.DetailsTemplateOSFormulaire;
import com.cgihosting.objets.PaginationObjet;
import com.cgihosting.objets.UtilisateurSession;
import com.cgihosting.outils.Dates;
import com.cgihosting.service.admin.GererHebergeurService;
import com.cgihosting.service.admin.GererUtilisateurService;
import com.cgihosting.service.admin.JournaliserService;
import com.cgihosting.service.exploit.GererTemplateOSService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;

/**
 * Created by marinib on 07/01/2017.
 */
@Controller
public class TemplateOSController {


    /**
     * Méthodes controller
     * Le tag @controller permet à spring boot d'interpréter les
     * méthodes comme des controleurs
     */



    @Autowired
    private GererTemplateOSService gererTemplateOSService;

    @Autowired
    private JournaliserService journaliserService;


    @Autowired
    private GererHebergeurService gererHebergeurService;

    @Autowired
    private GererUtilisateurService gererUtilisateurService;


    @RequestMapping("/exploit/afficherTemplateOS")
    String afficherTemplateOS(@RequestParam(value = "page", required = false, defaultValue = "0") int page,
                              @RequestParam(value = "ligneParPage", required = false, defaultValue = "5") int ligneParPage,Model model){

        model.addAttribute("formulaire", recupererFormulaireAfficherTemplateOS(page, ligneParPage));
        return "exploit/templatesOS/afficherTemplateOS";
    }

    @RequestMapping(value = "/exploit/afficherDetailsTemplateOS", method = RequestMethod.POST)
    String affichageDetailsTemplateOS(int identifiantTemplateOSSelect, Model model){

        model.addAttribute(ConstantesPage.NOM_FORMULAIRE_HTML, recupererFormulaireDetailsTemplateOS(identifiantTemplateOSSelect));
        return "exploit/templatesOS/detailsTemplateOS";
    }


    @RequestMapping(value = "/exploit/modifierTemplateOS", method = RequestMethod.POST)

    String creerTemplate(@Valid DetailsTemplateOSFormulaire detailsTemplateOSFormulaire, Model model, BindingResult bindingResult, @RequestParam String action){

        int identifiantDonneeTraitee = 0;

        TemplateOSDTO templateOSDTO ;

        if (action.equals(ConstantesPage.ACTION_SAUVEGARDER)) {

            if (bindingResult.hasErrors()) {


                return "exploit/templatesOS/detailsTemplateOS";
            }
            else{

                templateOSDTO = detailsTemplateOSFormulaire.getTemplateOSDTO();

                templateOSDTO.setDateCreation(Dates.aujourdhui());
                templateOSDTO.setDateModification(Dates.aujourdhui());

                identifiantDonneeTraitee =  gererTemplateOSService.modifierTemplateOS(templateOSDTO);

                JournalDTO journalDTO = new JournalDTO(UtilisateurSession.getLogin(), ConstantesAdmin.JOURNAL_MODIFICATION_TEMPLATE,
                                                        identifiantDonneeTraitee, Dates.aujourdhui());
                journaliserService.enregistrerJournalisation(journalDTO);



                return  "redirect:/exploit/afficherTemplateOS";

            }

        }

        else {

            return  "redirect:/exploit/afficherTemplateOS";

        }


    }



    /**
     * Méthodes privées appelées par les controleurs pour
     * remplir les forumalires associés aux pages web
     * méthodes comme des controleurs
     */

    private AfficherTemplateOSFormulaire recupererFormulaireAfficherTemplateOS(int pageCourante, int numLigneAfficheParPage)  {


        AfficherTemplateOSFormulaire afficherTemplateOSFormulaire = new AfficherTemplateOSFormulaire();

        PaginationObjet paginationObjet;
        paginationObjet = new PaginationObjet(numLigneAfficheParPage, pageCourante, gererTemplateOSService.nombreTotalTemplateOS());
        afficherTemplateOSFormulaire.setPaginationObjet(paginationObjet);

        afficherTemplateOSFormulaire.setTemplateOSDTOPage(gererTemplateOSService.searchAllTemplateOSDTOPageByPage(pageCourante, numLigneAfficheParPage));


        afficherTemplateOSFormulaire.setTitrePage(ConstantesPage.EXPLOIT_AFFICHAGE_TEMPLATES_OS_TITRE);
        afficherTemplateOSFormulaire.setBoutonSoumissionLabel(ConstantesPage.EXPLOIT_BOUTON_AJOUTER_TEMPLATE_OS);



        return afficherTemplateOSFormulaire;
    }



    /**
     * Méthodes privées appelées par les controleurs pour
     * remplir les forumalires associés aux pages web
     * méthodes comme des controleurs
     */

    private DetailsTemplateOSFormulaire recupererFormulaireDetailsTemplateOS(int identifiantTemplateOSSelect) {


        /** Attributs**/
        DetailsTemplateOSFormulaire detailsTemplateOSFormulaire = new DetailsTemplateOSFormulaire();
        TemplateOSDTO templateOSDTO = new TemplateOSDTO();
        String username;
        UtilisateurDTO utilisateurDTO;

        /** CODE **/


        utilisateurDTO = gererUtilisateurService.searchUserByLogonName(UtilisateurSession.getLogin());


        // SI identifiantTemplateOSSelect est non zéro, il s'agit d'une consultation sinon, c'est un ajout

        if (identifiantTemplateOSSelect != 0) {
            templateOSDTO = gererTemplateOSService.recupererTemplateOSById(identifiantTemplateOSSelect);

            detailsTemplateOSFormulaire.setBoutonSoumissionLabel(ConstantesPage.EXPLOIT_BOUTON_MODIFIER_TEMPLATE_OS);
        }
        else {

            templateOSDTO.setIdCreateur(utilisateurDTO.getId());

            templateOSDTO.setUtilisateurCreateurDTO(utilisateurDTO);
            templateOSDTO.setUtilisateurModificateurDTO(utilisateurDTO);


            detailsTemplateOSFormulaire.setBoutonSoumissionLabel(ConstantesPage.EXPLOIT_BOUTON_AJOUTER_TEMPLATE_OS);
        }

        templateOSDTO.setIdModificateur(utilisateurDTO.getId());
        detailsTemplateOSFormulaire.setTemplateOSDTO(templateOSDTO);

        detailsTemplateOSFormulaire.setHebergeurDTOListe(gererHebergeurService.recupererHebergeurs());
        detailsTemplateOSFormulaire.setTypeOSDTOListe(gererTemplateOSService.recupererTypeOS());


        detailsTemplateOSFormulaire.setTitrePage(ConstantesPage.EXPLOIT_DETAIL_SERVEUR_VIRTUEL_TITRE);
        detailsTemplateOSFormulaire.setBoutonRetourLabel(ConstantesPage.EXPLOIT_BOUTON_RETOUR_LISTE_TEMPLATE_OS);


        return detailsTemplateOSFormulaire;
    }


}
