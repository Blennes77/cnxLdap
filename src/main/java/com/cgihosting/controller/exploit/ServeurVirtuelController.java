package com.cgihosting.controller.exploit;

import com.cgihosting.constantes.ConstantesPage;
import com.cgihosting.formulaire.exploit.AfficherServeursVirtuelsFormulaire;
import com.cgihosting.formulaire.exploit.DetailsServeurVirtuelFormulaire;
import com.cgihosting.service.exploit.GererServeursVirtuelsService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;

/**
 * Created by marinib on 09/12/2016.
 */
@Controller
public class ServeurVirtuelController {


    /**
     * Méthodes controller
     * Le tag @controller permet à spring boot d'interpréter les
     * méthodes comme des controleurs
     */



    @Autowired
    private GererServeursVirtuelsService gererServeursVirtuelsService;


    @RequestMapping("/exploit/afficherServeursVirtuels")
    String afficherHebergeurs(Model model){

        model.addAttribute("formulaire", recupererFormulaireAfficherServeursVirtuels());
        return "exploit/serveursVirtuels/afficherServeursVirtuels";
    }

    @RequestMapping(value = "/exploit/afficherDetailsServeurVirtuel", method = RequestMethod.POST)
    String affichageDetailHebergeurs(AfficherServeursVirtuelsFormulaire afficherServeursVirtuelsFormulaire, Model model){

        model.addAttribute(ConstantesPage.NOM_FORMULAIRE_HTML, recupererFormulaireDetailsServeurVirtuel());
        return "exploit/serveursVirtuels/detailsServeurVirtuel";
    }


    @RequestMapping(value = "/exploit/modifierServeurVirtuel", method = RequestMethod.POST)

    String creerHebergeur(@Valid DetailsServeurVirtuelFormulaire detailsServeurVirtuelFormulaire, Model model, BindingResult bindingResult, @RequestParam String action){


        if (action.equals(ConstantesPage.ACTION_SAUVEGARDER)) {

            if (bindingResult.hasErrors()) {


                return "admin/hebergeurs/detailsHebergeur";
            }
            else{

              //  gererServeursVirtuelsService.modifierServeurVirtuel(detailsServeurVirtuelFormulaire.getServeurVirtuelDTO());


                return  "redirect:/exploit/afficherServeursVirtuels";

            }

        }

        else {

            return  "redirect:/exploit/afficherServeursVirtuels";

        }


    }



    /**
     * Méthodes privées appelées par les controleurs pour
     * remplir les forumalires associés aux pages web
     * méthodes comme des controleurs
     */

    private AfficherServeursVirtuelsFormulaire recupererFormulaireAfficherServeursVirtuels() {


        AfficherServeursVirtuelsFormulaire afficherServeursVirtuelsFormulaire = new AfficherServeursVirtuelsFormulaire();

        afficherServeursVirtuelsFormulaire.setTitrePage(ConstantesPage.AFFICHAGE_SERVEURS_VIRTUELS_TITRE);
        afficherServeursVirtuelsFormulaire.setServeurVirtuelDTOListe(gererServeursVirtuelsService.recupererServeursVirtuels());

        return afficherServeursVirtuelsFormulaire;
    }



    /**
     * Méthodes privées appelées par les controleurs pour
     * remplir les forumalires associés aux pages web
     * méthodes comme des controleurs
     */

    private DetailsServeurVirtuelFormulaire recupererFormulaireDetailsServeurVirtuel() {


        DetailsServeurVirtuelFormulaire detailsServeurVirtuelFormulaire = new DetailsServeurVirtuelFormulaire();



        detailsServeurVirtuelFormulaire.setServeurVirtuelDTO(gererServeursVirtuelsService.recupererServeurVirtuelById(1));
        detailsServeurVirtuelFormulaire.setTitrePage(ConstantesPage.DETAIL_SERVEUR_VIRTUEL_TITRE);
        detailsServeurVirtuelFormulaire.setBoutonSoumissionLabel(ConstantesPage.BOUTON_MODIFIER_SERVEUR_VIRTUEL);
        detailsServeurVirtuelFormulaire.setBoutonRetourLabel(ConstantesPage.BOUTON_RETOUR_LISTE_SERVEURS_VIRTUELS);


        return detailsServeurVirtuelFormulaire;
    }


}
