package com.cgihosting.service.exploit;

import com.cgihosting.domain.application.TemplateOSDTO;
import com.cgihosting.domain.referentiel.ReferentielOSDTO;
import com.cgihosting.repository.ReferentielOSRepository;
import com.cgihosting.repository.TemplateOSRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Created by marinib on 07/01/2017
 */
@Service
public class GererTemplateOSServiceImpl implements GererTemplateOSService {

    /**
     * La balise autowired est indispensable
     */
    @Autowired
    private TemplateOSRepository templateOSRepository;

    @Autowired
    private ReferentielOSRepository referentielOSRepository;

    @Override
    public List<TemplateOSDTO> recupererTemplateOS() {

        List<TemplateOSDTO> templateOSDTOliste = null;

        templateOSDTOliste = (List<TemplateOSDTO>) templateOSRepository.findAll();

        return templateOSDTOliste;

    }

    @Override
    public List<TemplateOSDTO> recupererTemplateOSActifs() {

        List<TemplateOSDTO> templateOSDTOliste = null;

        templateOSDTOliste = (List<TemplateOSDTO>) templateOSRepository.findAll();

        return templateOSDTOliste;

    }


    @Override
    public TemplateOSDTO recupererTemplateOSById(int identifiant) {

        TemplateOSDTO templateOSDTO = templateOSRepository.findById(identifiant);

        return templateOSDTO;
    }



    @Override
    public int modifierTemplateOS(TemplateOSDTO templateOSDTO) {

        templateOSRepository.save(templateOSDTO);

        return templateOSDTO.getId();
    }

    public Long nombreTotalTemplateOS() {
        Long total;

        total = templateOSRepository.count();
        return total;
    }

    @Override
    public Page<TemplateOSDTO> searchAllTemplateOSDTOPageByPage(Integer page, Integer ligneParPage) {

        Page<TemplateOSDTO> templateOSDTOPage;


        templateOSDTOPage = templateOSRepository.findAll(new PageRequest(page,ligneParPage, new Sort(
                new Sort.Order(Sort.Direction.ASC, "libelleTemplate")
        )));
        return templateOSDTOPage;
    }



    @Override
    public List<ReferentielOSDTO> recupererReferentielOS() {

        List<ReferentielOSDTO> referentielOSDTOListe = null;

        referentielOSDTOListe = (List<ReferentielOSDTO>) referentielOSRepository.findAll();

        return referentielOSDTOListe;

    }
}
