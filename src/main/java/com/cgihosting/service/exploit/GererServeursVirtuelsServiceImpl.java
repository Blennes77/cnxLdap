package com.cgihosting.service.exploit;

import com.cgihosting.domain.application.ServeurVirtuelDTO;
import com.cgihosting.repository.ServeurVirtuelRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Created by marinib on 09/12/2016.
 */
@Service
public class GererServeursVirtuelsServiceImpl implements GererServeursVirtuelsService {

    /**
     * La balise autowired est indispensable
     */
    @Autowired
    private ServeurVirtuelRepository serveurVirtuelRepository;

    @Override
    public List<ServeurVirtuelDTO> recupererServeursVirtuels() {

        List<ServeurVirtuelDTO> serveurVirtuelDTOListe = null;

        serveurVirtuelDTOListe = (List<ServeurVirtuelDTO>) serveurVirtuelRepository.findAll();

        return serveurVirtuelDTOListe;

    }


    @Override
    public ServeurVirtuelDTO recupererServeurVirtuelById(int identifiant) {

        ServeurVirtuelDTO serveurVirtuelDTO = serveurVirtuelRepository.findById(identifiant);

        return serveurVirtuelDTO;
    }

    @Override
    public int modifierServeurVirtuel(ServeurVirtuelDTO serveurVirtuelDTO) {

        serveurVirtuelRepository.save(serveurVirtuelDTO);

        return serveurVirtuelDTO.getId();
    }

    public Long nombreTotalServeursVirtuels() {
        Long total;

        total = serveurVirtuelRepository.count();
        return total;
    }

    @Override
    public Page<ServeurVirtuelDTO> searchAllServeurVirtuelDTOPageByPage(Integer page, Integer ligneParPage) {

        Page<ServeurVirtuelDTO> serveurVirtuelDTOPage;


        serveurVirtuelDTOPage = serveurVirtuelRepository.findAll(new PageRequest(page,ligneParPage, new Sort(
                new Sort.Order(Sort.Direction.ASC, "nomServeur")
        )));
        return serveurVirtuelDTOPage;
    }

    public int creerServeurVirtuel(ServeurVirtuelDTO serveurVirtuelDTO) {


        serveurVirtuelRepository.save(serveurVirtuelDTO);

        return serveurVirtuelDTO.getId();

    }

    @Override
    public Long nombreTotalServeursVirtuelsByUtilisateur() {
        Long total;

        total = serveurVirtuelRepository.count();
        return total;
    }

    @Override
    public Page<ServeurVirtuelDTO> searchAllServeurVirtuelDTOPageByPageByUser(Integer page, Integer ligneParPage, Integer userId) {
        Page<ServeurVirtuelDTO> serveurVirtuelDTOPage = null;

/*
        serveurVirtuelDTOPage = serveurVirtuelRepository.findByIdEnregistreurOrIdDP(new PageRequest(page,ligneParPage, new Sort(
                new Sort.Order(Sort.Direction.ASC, "nomServeur")
        )));
        */
        return serveurVirtuelDTOPage;
    }


}
