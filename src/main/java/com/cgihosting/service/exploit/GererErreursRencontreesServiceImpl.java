package com.cgihosting.service.exploit;

import com.cgihosting.domain.referentiel.ReferentielErreursRencontreesDTO;
import com.cgihosting.domain.referentiel.ReferentielVirtualisationDTO;
import com.cgihosting.repository.ReferentielErreursRencontreesRepository;
import com.cgihosting.repository.ReferentielVirtualisationRepository;
import com.cgihosting.service.admin.GererVirtualisationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Created by marinib on 12/01/2017
 */
@Service
public class GererErreursRencontreesServiceImpl implements GererErreursRencontreesService {

    /**
     * La balise autowired est indispensable
     */

    @Autowired
    private ReferentielErreursRencontreesRepository referentielErreursRencontreesRepository;

    @Override
    public List<ReferentielErreursRencontreesDTO> recupererReferentielErreursRencontrees() {

        List<ReferentielErreursRencontreesDTO> referentielErreursRencontreesDTOListe = null;

        referentielErreursRencontreesDTOListe = (List<ReferentielErreursRencontreesDTO>) referentielErreursRencontreesRepository.findAll();

        return referentielErreursRencontreesDTOListe;

    }



    @Override
    public ReferentielErreursRencontreesDTO recupererReferentielErreursRencontreesById(int identifiant) {

        ReferentielErreursRencontreesDTO referentielErreursRencontreesDTO = referentielErreursRencontreesRepository.findById(identifiant);

        return referentielErreursRencontreesDTO;
    }



    @Override
    public int modifierReferentielErreursRencontrees(ReferentielErreursRencontreesDTO referentielErreursRencontreesDTO) {

        referentielErreursRencontreesRepository.save(referentielErreursRencontreesDTO);

        return referentielErreursRencontreesDTO.getId();
    }

    public Long nombreTotalErreursRencontrees() {
        Long total;

        total = referentielErreursRencontreesRepository.count();
        return total;
    }

    @Override
    public Page<ReferentielErreursRencontreesDTO> searchAllReferentielErreursRencontreesDTOPageByPage(Integer page, Integer ligneParPage) {

        Page<ReferentielErreursRencontreesDTO> referentielErreursRencontreesDTOPage;


        referentielErreursRencontreesDTOPage = referentielErreursRencontreesRepository.findAll(new PageRequest(page,ligneParPage, new Sort(
                new Sort.Order(Sort.Direction.ASC, "libelle")
        )));
        return referentielErreursRencontreesDTOPage;
    }


}
